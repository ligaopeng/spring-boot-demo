######################### \u914D\u7F6Etomcat ########################

#\u81EA\u5B9A\u4E49\u7AEF\u53E3\u53F7
server.port=8090
#\u4F1A\u8BDDsession\u8FC7\u671F\u65F6\u95F4,\u5355\u4F4D\u79D2
server.servlet.session.timeout=60s
server.tomcat.uri-encoding=UTF-8
#\u542F\u7528http\u76F8\u5E94\u538B\u7F29
server.compression.enabled=true
#\u8BBE\u7F6E\u8BBF\u95EE\u8DEF\u5F84\uFF0C\u9ED8\u8BA4/
#server.servlet.context-path=/api
#\u5B9A\u5236\u6839\u8DEF\u5F84
#spring.data.rest.base-path=/api
spring.mvc.static-path-pattern=/**

######################### \u5728\u7C7B\u4E0A\u4F7F\u7528\u6B64\u6CE8\u89E3@ImportResource({"classpath:aa.xml","bb.xml"})\uFF0C\u7528\u4E8E\u52A0\u8F7Dxml\u914D\u7F6E

#\u81EA\u5B9A\u4E49\u503C\uFF0C\u5728\u5C5E\u6027\u4E0A\u4F7F\u7528@Value\u6CE8\u5165\u503C
book.author=\u674E\u9AD8\u670B
book.name=hahaha

######################### @ConfigurationProperties(prefix = "author")//\u4F7F\u7528\u6CE8\u89E3\u5904\u7406\u5668\u751F\u6210\u81EA\u5DF1\u7684\u5143\u6570\u636E, prefix :\u524D\u7F00\uFF0C locations={"classpath:com.lgp.config/author.properties"}

author.name=\u674E\u9AD8\u670B
author.age=25

######################### \u4F7F\u7528log4j2\u65E5\u5FD7 ########################

##\u65E5\u5FD7\u914D\u7F6E\u6587\u4EF6log4j2.xml
logging.config=classpath:log4j2.xml

######################### \u67E5\u770B\u81EA\u52A8\u914D\u7F6E\u7684\u62A5\u544A ########################

#debug=true

######################### \u8BBE\u7F6E\u7F16\u7801\u65B9\u5F0F ########################

spring.http.encoding.charset=UTF-8
spring.http.encoding.enabled=true
spring.http.encoding.force=true
spring.messages.encoding=UTF-8

######################### \u81EA\u5B9A\u4E49\u81EA\u52A8\u914D\u7F6E ####################

hello.msg=\u674E\u9AD8\u670B

######################## SSL \u914D\u7F6E ##########################

#\u914D\u7F6ESSL ,\u751F\u6210\u8BC1\u4E66\u7684\u547D\u4EE4\uFF1Akeytool -genkey -alias tomcat
#\u4FDD\u5B58SSL\u8BC1\u4E66\u7684\u5BC6\u94A5\u5B58\u50A8\u533A\u7684\u8DEF\u5F84\uFF08\u901A\u5E38\u662F\u4E00\u4E2Ajks\u6587\u4EF6
server.ssl.key-store=classpath:mykeys.jks
##\u7528\u4E8E\u8BBF\u95EE\u5BC6\u94A5\u5B58\u50A8\u533A\u4E2D\u5BC6\u94A5\u7684\u5BC6\u7801
server.ssl.key-password=123123
server.ssl.key-store-password=123123
##\u5BC6\u94A5\u5B58\u50A8\u7684\u7C7B\u578B
server.ssl.key-store-type=JKS
##\uFF03\u6807\u8BC6\u5BC6\u94A5\u5E93\u4E2D\u5BC6\u94A5\u7684\u522B\u540D
server.ssl.key-alias=tomcat
server.ssl.enabled=true

######################### profile\u914D\u7F6E\uFF0C\u4E0D\u540C\u7684\u73AF\u5883\u4F7F\u7528\u4E0D\u540C\u7684\u914D\u7F6E ########################
# \u5355\u6570\u636E\u6E90
#spring.profiles.include=singleDatasource
# \u5355\u6570\u636E\u6E90\u3001rabbitmq\u6D88\u606F\u961F\u5217, rocketMq
spring.profiles.include=singleDatasource,topicProducerConfig,directProducerConfig,fanoutProducerConfig
# \u5355\u6570\u636E\u6E90, quratz\u5B9A\u65F6\u4EFB\u52A1
#spring.profiles.include=singleDatasource,quartzDatasource,schedulerCustomizer,schedulerListener
## \u4E3B\u4ECE\uFF0C\u4E3B\u5E93\u8BFB\u5199\uFF0C\u4ECE\u5E93\u53EA\u8BFB, \u62E6\u622A\u5668\u5B9E\u73B0
#spring.profiles.include=datasource,master-slave-datasource
## \u4E00\u4E3B\u591A\u4ECE\uFF0C\u53EA\u6709\u4E3B\u5E93\u6709\u4E8B\u52A1\uFF0C\u4ECE\u5E93\u53EA\u8BFB\u4F7F\u7528\u6CE8\u89E3\u548C\u62E6\u622A\u5668\u5B9E\u73B0\uFF0C@ReadOnlyConnection\u3001ReadOnlyConnectionInterceptor
#spring.profiles.include=datasource,one-master-many-slave-datasource
## \u591A\u6570\u636E\u6E90
#spring.profiles.include=datasource,master-datasource,cluster-datasource

######################### \u6570\u636E\u5E93\u914D\u7F6E\uFF08\u5355\u6570\u636E\u6E90\uFF09########################

spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.druid.db-type=mysql
#spring.datasource.druid.url=jdbc:mysql://localhost:3306/lgp_test?useUnicode=true&characterEncoding=utf8&useSSL=true
spring.datasource.druid.url=jdbc:log4jdbc:mysql://localhost:3306/lgp_test?useUnicode=true&characterEncoding=utf8&useSSL=true
spring.datasource.druid.username=root
spring.datasource.druid.password=root
#spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.druid.driver-class-name=net.sf.log4jdbc.sql.jdbcapi.DriverSpy
spring.datasource.druid.initial-size=1
spring.datasource.druid.max-active=20
spring.datasource.druid.pool-prepared-statements=true
spring.datasource.druid.max-pool-prepared-statement-per-connection-size=20
#\u901A\u8FC7connectionProperties\u5C5E\u6027\u6765\u6253\u5F00mergeSql\u529F\u80FD\uFF1B\u6162SQL\u8BB0\u5F55
spring.datasource.druid.connection-properties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
spring.datasource.druid.min-idle=1
spring.datasource.druid.time-between-eviction-runs-millis=60000
spring.datasource.druid.min-evictable-idle-time-millis=300000
spring.datasource.druid.validation-query=select 1 from dual
spring.datasource.druid.test-while-idle=true
spring.datasource.druid.test-on-borrow=false
spring.datasource.druid.test-on-return=false
#\u914D\u7F6E\u76D1\u63A7\u7EDF\u8BA1\u62E6\u622A\u7684filters\uFF0C\u53BB\u6389\u540E\u76D1\u63A7\u754C\u9762sql\u5C06\u65E0\u6CD5\u7EDF\u8BA1,'wall'\u7528\u4E8E\u9632\u706B\u5899
spring.datasource.druid.filters=stat, wall, log4j2


######################## mybatis \u914D\u7F6E ########################

# @MapperScan("com.lgp.dao")
mybatis.type-aliases-package=com.lgp.entity
mybatis.mapper-locations=classpath:mapper/**/*.xml
mybatis.config-location=classpath:mybatis/mybatis-config.xml
## \u5168\u5C40\u6620\u5C04\u5668\u542F\u7528\u7F13\u5B58
#mybatis.configuration.cache-enabled=true
## \u8BBE\u7F6E\u5168\u5C40\u8303\u56F4\u5185\u542F\u7528\u6216\u7981\u7528\u5EF6\u8FDF\u52A0\u8F7D\uFF0C\u5F53\u7981\u7528\u65F6\u6240\u6709\u5173\u8054\u5BF9\u8C61\u90FD\u4F1A\u5373\u65F6\u52A0\u8F7D true|false true
#mybatis.configuration.lazy-loading-enabled=false
## \u8BBE\u7F6E\u5728\u8C03\u7528\u61D2\u52A0\u8F7D\u7684\u5BF9\u8C61\u4E2D\u61D2\u52A0\u8F7D\u5C5E\u6027\u662F\u5426\u5168\u90E8\u52A0\u8F7D\uFF0C\u4E3Atrue\u65F6\u5168\u90E8\u52A0\u8F7D\uFF0C\u4E3Afalse\u65F6\u90E8\u5206\u52A0\u8F7D\uFF0C true|false true -->
#mybatis.configuration.aggressive-lazy-loading=true
## \u5141\u8BB8\u548C\u4E0D\u5141\u8BB8\u591A\u4E2A\u7ED3\u679C\u96C6\u4ECE\u5355\u6761\u8BED\u53E5\u4E2D\u8FD4\u56DE\uFF08\u53D6\u51B3\u4E8E\u9A71\u52A8\u9700\u6C42\uFF09true|false true -->
#mybatis.configuration.multiple-result-sets-enabled=true
## \u4F7F\u7528\u5217\u6807\u7B7E\u4EE3\u66FF\u5217\u540D\u79F0\uFF0C\u4E0D\u540C\u7684\u9A71\u52A8\u5668\u6709\u4E0D\u540C\u7684\u4F5C\u6CD5\u3002 true|false true-->
#mybatis.configuration.use-column-label=true
## \u5141\u8BB8JDBC\u751F\u6210\u4E3B\u952E\u3002\u9700\u8981\u9A71\u52A8\u5668\u652F\u6301.\u5982\u679C\u8BBE\u4E3A\u4E86true\uFF0C\u8FD9\u4E2A\u8BBE\u7F6E\u5C06\u5F3A\u5236\u4F7F\u7528\u88AB\u751F\u6210\u7684\u4E3B\u952E\uFF0C\u6709\u4E00\u4E9B\u9A71\u52A8\u5668\u4E0D\u517C\u5BB9\u4E0D\u8FC7\u4ECD\u7136\u53EF\u4EE5\u6267\u884C\u3002true|false false
#mybatis.configuration.use-generated-keys=true
## \u6307\u5B9AMyBatis\u662F\u5426\u5E76\u4E14\u5982\u4F55\u6765\u81EA\u52A8\u6620\u5C04\u6570\u636E\u8868\u5B57\u6BB5\u4E0E\u5BF9\u8C61\u7684\u5C5E\u6027\u3002
## 1.PARTIAL\uFF1A\u81EA\u52A8\u7B80\u5355\u6620\u5C04\u3002
## 2.NONE\uFF1A\u6CA1\u6709\u5D4C\u5957\u7684\u7ED3\u679C\u3002
## 3.FULL\uFF1A\u81EA\u52A8\u6620\u5C04\u6240\u6709\u590D\u6742\u7684\u7ED3\u679C\u3002  -->
#mybatis.configuration.auto-mapping-behavior=full
## <!-- \u914D\u7F6E\u548C\u8BBE\u5B9A\u6267\u884C\u5668\u3002
## 1.SIMPLE\uFF1A\u6267\u884C\u5668\u6CA1\u6709\u4EC0\u4E48\u7279\u522B\u4E4B\u5904\u3002
## 2.REUSE\uFF1A\u6267\u884C\u5668\u53EF\u80FD\u91CD\u590D\u4F7F\u7528preparedstatements\u8BED\u53E5\uFF0C
## 3.BATCH\uFF1A\u6267\u884C\u5668\u53EF\u4EE5\u91CD\u590D\u6267\u884C\u8BED\u53E5\u548C\u6279\u91CF\u66F4\u65B0\u3002 -->
#mybatis.configuration.default-executor-type=simple
## \u8BBE\u7F6E\u9A71\u52A8\u7B49\u5F85\u6570\u636E\u5E93\u56DE\u5E94\u7684\u8D85\u65F6\u65F6\u95F4 -->
#mybatis.configuration.default-statement-timeout=25000
#mybatis.configuration.log-impl=org.apache.ibatis.logging.log4j2.Log4j2Impl

########################\u591A\u6570\u636E\u6E90\u914D\u7F6E#############################

# master \u6570\u636E\u6E90\u914D\u7F6E
#master.druid.url=jdbc:mysql://localhost:3306/lgp_test?useUnicode=true&characterEncoding=utf8&useSSL=true
master.druid.url=jdbc:log4jdbc:mysql://localhost:3306/lgp_test?useUnicode=true&characterEncoding=utf8&useSSL=true
master.druid.username=root
master.druid.password=root
#master.druid.driver-class-name=com.mysql.jdbc.Driver
master.druid.driver-class-name=net.sf.log4jdbc.sql.jdbcapi.DriverSpy
# \u6700\u5927\u6D3B\u8DC3\u6570
master.druid.max-active=20
# \u521D\u59CB\u5316\u6570\u91CF
master.druid.initial-size=1
# \u6700\u5927\u8FDE\u63A5\u7B49\u5F85\u8D85\u65F6\u65F6\u95F4
master.druid.max-wait=70000
# \u6253\u5F00PSCache\uFF0C\u5E76\u4E14\u6307\u5B9A\u6BCF\u4E2A\u8FDE\u63A5PSCache\u7684\u5927\u5C0F
master.druid.pool-prepared-statements=true
master.druid.max-pool-prepared-statement-per-connection-size=20
# \u901A\u8FC7connectionProperties\u5C5E\u6027\u6765\u6253\u5F00mergeSql\u529F\u80FD\uFF1B\u6162SQL\u8BB0\u5F55
master.druid.connection-properties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
master.druid.min-idle=1
master.druid.time-between-eviction-runs-millis=60000
master.druid.min-evictable-idle-time-millis=300000
master.druid.validation-query=select 1 from dual
master.druid.test-while-idle=true
master.druid.test-on-borrow=false
master.druid.test-on-return=false
# \u914D\u7F6E\u76D1\u63A7\u7EDF\u8BA1\u62E6\u622A\u7684filters\uFF0C\u53BB\u6389\u540E\u76D1\u63A7\u754C\u9762sql\u5C06\u65E0\u6CD5\u7EDF\u8BA1,'wall'\u7528\u4E8E\u9632\u706B\u5899
master.druid.filters=stat, wall, log4j2


# \u81EA\u5B9A\u4E49\u4ECE\u5E93\u6570\u91CF
slave.datasource.number=1

# cluster(\u4ECE\u5E93) \u6570\u636E\u6E90\u914D\u7F6E
#cluster.druid.url=jdbc:mysql://localhost:3306/lgp_test?useUnicode=true&characterEncoding=utf8&useSSL=true
cluster.druid.url=jdbc:log4jdbc:mysql://localhost:3306/lgp_test?useUnicode=true&characterEncoding=utf8&useSSL=true
cluster.druid.username=root
cluster.druid.password=root
#cluster.druid.driver-class-name=com.mysql.jdbc.Driver
cluster.druid.driver-class-name=net.sf.log4jdbc.sql.jdbcapi.DriverSpy
# \u6700\u5927\u6D3B\u8DC3\u6570
cluster.druid.max-active=20
# \u521D\u59CB\u5316\u6570\u91CF
cluster.druid.initial-size=1
# \u6700\u5927\u8FDE\u63A5\u7B49\u5F85\u8D85\u65F6\u65F6\u95F4
cluster.druid.max-wait=60000
# \u6253\u5F00PSCache\uFF0C\u5E76\u4E14\u6307\u5B9A\u6BCF\u4E2A\u8FDE\u63A5PSCache\u7684\u5927\u5C0F
cluster.druid.pool-prepared-statements=true
cluster.druid.max-pool-prepared-statement-per-connection-size=20
# \u901A\u8FC7connectionProperties\u5C5E\u6027\u6765\u6253\u5F00mergeSql\u529F\u80FD\uFF1B\u6162SQL\u8BB0\u5F55
cluster.druid.connection-properties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
cluster.druid.min-idle=1
cluster.druid.time-between-eviction-runs-millis=60000
cluster.druid.min-evictable-idle-time-millis=300000
cluster.druid.validation-query=select 1 from dual
cluster.druid.test-while-idle=true
cluster.druid.test-on-borrow=false
cluster.druid.test-on-return=false
# \u914D\u7F6E\u76D1\u63A7\u7EDF\u8BA1\u62E6\u622A\u7684filters\uFF0C\u53BB\u6389\u540E\u76D1\u63A7\u754C\u9762sql\u5C06\u65E0\u6CD5\u7EDF\u8BA1,'wall'\u7528\u4E8E\u9632\u706B\u5899
cluster.druid.filters=stat, wall, log4j2


######################## \u5206\u9875\u63D2\u4EF6\u914D\u7F6E ########################
pagehelper.helperDialect=mysql
pagehelper.reasonable=true
pagehelper.supportMethodsArguments=true
pagehelper.params=count=countSql

######################## mongodb\u914D\u7F6E ########################
spring.data.mongodb.uri=mongodb://localhost/test
spring.data.mongodb.username=test
spring.data.mongodb.password=123456

######################### redis\u914D\u7F6E ########################

spring.redis.host=127.0.0.1
spring.redis.port=6379
# \u8FDE\u63A5\u6C60\u4E2D\u7684\u6700\u5927\u7A7A\u95F2\u8FDE\u63A5
spring.redis.jedis.pool.max-idle=20
# \u8FDE\u63A5\u6C60\u4E2D\u7684\u6700\u5C0F\u7A7A\u95F2\u8FDE\u63A5
spring.redis.jedis.pool.min-idle=1
# \u8FDE\u63A5\u6C60\u6700\u5927\u8FDE\u63A5\u6570\uFF08\u4F7F\u7528\u8D1F\u503C\u8868\u793A\u6CA1\u6709\u9650\u5236
spring.redis.lettuce.pool.max-active=20
# \u8FDE\u63A5\u6C60\u6700\u5927\u963B\u585E\u7B49\u5F85\u65F6\u95F4\uFF08\u4F7F\u7528\u8D1F\u503C\u8868\u793A\u6CA1\u6709\u9650\u5236\uFF09
spring.redis.jedis.pool.max-wait=60s
#\u9ED8\u8BA4\u662F\u7D22\u5F15\u4E3A0\u7684\u6570\u636E\u5E93
spring.redis.database=0
# \u8FDE\u63A5\u8D85\u65F6\u65F6\u95F4\uFF08\u6BEB\u79D2\uFF09
spring.redis.timeout=60s


#management.endpoints.web.cors.max-age=60s
#management.endpoints.web.cors.allow-credentials=true
#management.endpoints.web.cors.allowed-headers=*
#management.endpoints.web.cors.allowed-methods=*
#management.endpoints.web.cors.allowed-origins=*
#management.endpoints.web.cors.exposed-headers=*

#spring.quartz.job-store-type=memory
spring.quartz.job-store-type=jdbc
## \u56FA\u5B9A\u524D\u7F00org.quartz
## \u4E3B\u8981\u5206\u4E3Ascheduler\u3001threadPool\u3001jobStore\u3001plugin\u7B49\u90E8\u5206
spring.quartz.properties.org.quartz.scheduler.instanceName = DefaultQuartzScheduler
spring.quartz.properties.org.quartz.scheduler.rmi.export = false
spring.quartz.properties.org.quartz.scheduler.rmi.proxy = false
spring.quartz.properties.org.quartz.scheduler.wrapJobExecutionInUserTransaction = false
# \u5B9E\u4F8B\u5316ThreadPool\u65F6\uFF0C\u4F7F\u7528\u7684\u7EBF\u7A0B\u7C7B\u4E3ASimpleThreadPool
spring.quartz.properties.org.quartz.threadPool.class = org.quartz.simpl.SimpleThreadPool
# threadCount\u548CthreadPriority\u5C06\u4EE5setter\u7684\u5F62\u5F0F\u6CE8\u5165ThreadPool\u5B9E\u4F8B
# \u5E76\u53D1\u4E2A\u6570
spring.quartz.properties.org.quartz.threadPool.threadCount = 20
# \u4F18\u5148\u7EA7
spring.quartz.properties.org.quartz.threadPool.threadPriority = 5
spring.quartz.properties.org.quartz.threadPool.threadsInheritContextClassLoaderOfInitializingThread = true
spring.quartz.properties.org.quartz.jobStore.misfireThreshold = 5000
# \u9ED8\u8BA4\u5B58\u50A8\u5728\u5185\u5B58\u4E2D
#spring.quartz.properties.org.quartz.jobStore.class = org.quartz.simpl.RAMJobStore

#\u6301\u4E45\u5316
#spring.quartz.properties.org.quartz.jobStore.class = org.quartz.impl.jdbcjobstore.JobStoreTX
#spring.quartz.properties.org.quartz.jobStore.tablePrefix = qrtz_
#spring.quartz.properties.org.quartz.jobStore.dataSource = qzDS
#spring.quartz.properties.org.quartz.dataSource.qzDS.driver = com.mysql.jdbc.Driver
#spring.quartz.properties.org.quartz.dataSource.qzDS.URL = jdbc:mysql://127.0.0.1:3306/quartz_db?useUnicode=true&characterEncoding=UTF-8&useSSL=true
#spring.quartz.properties.org.quartz.dataSource.qzDS.user = root
#spring.quartz.properties.org.quartz.dataSource.qzDS.password = root
#spring.quartz.properties.org.quartz.dataSource.qzDS.maxConnections = 10

# quartzDatasource \u6570\u636E\u6E90\u914D\u7F6E
quartz.druid.url=jdbc:mysql://127.0.0.1:3306/quartz_db?useUnicode=true&characterEncoding=utf8&useSSL=true
quartz.druid.username=root
quartz.druid.password=root
quartz.druid.driver-class-name=com.mysql.jdbc.Driver

##############################rabbitmq###################################

spring.rabbitmq.host=127.0.0.1
spring.rabbitmq.port=5672
spring.rabbitmq.username=myuser
spring.rabbitmq.password=mypass
spring.rabbitmq.virtual-host=/
spring.rabbitmq.publisher-confirms=true
#spring.rabbitmq.dynamic \u662F\u5426\u521B\u5EFAAmqpAdmin bean. \u9ED8\u8BA4\u4E3A: true
#spring.rabbitmq.listener.acknowledge-mode \u6307\u5B9AAcknowledge\u7684\u6A21\u5F0F.
#spring.rabbitmq.listener.auto-startup \u662F\u5426\u5728\u542F\u52A8\u65F6\u5C31\u542F\u52A8mq\uFF0C\u9ED8\u8BA4: true
#spring.rabbitmq.listener.concurrency \u6307\u5B9A\u6700\u5C0F\u7684\u6D88\u8D39\u8005\u6570\u91CF.
#spring.rabbitmq.listener.max-concurrency \u6307\u5B9A\u6700\u5927\u7684\u6D88\u8D39\u8005\u6570\u91CF.
#spring.rabbitmq.listener.prefetch \u6307\u5B9A\u4E00\u4E2A\u8BF7\u6C42\u80FD\u5904\u7406\u591A\u5C11\u4E2A\u6D88\u606F\uFF0C\u5982\u679C\u6709\u4E8B\u52A1\u7684\u8BDD\uFF0C\u5FC5\u987B\u5927\u4E8E\u7B49\u4E8Etransaction\u6570\u91CF.
#spring.rabbitmq.listener.transaction-size \u6307\u5B9A\u4E00\u4E2A\u4E8B\u52A1\u5904\u7406\u7684\u6D88\u606F\u6570\u91CF\uFF0C\u6700\u597D\u662F\u5C0F\u4E8E\u7B49\u4E8Eprefetch\u7684\u6570\u91CF.
#spring.rabbitmq.requested-heartbeat \u6307\u5B9A\u5FC3\u8DF3\u8D85\u65F6\uFF0C0\u4E3A\u4E0D\u6307\u5B9A.
#spring.rabbitmq.ssl.enabled \u662F\u5426\u5F00\u59CBSSL\uFF0C\u9ED8\u8BA4: false
#spring.rabbitmq.ssl.key-store \u6307\u5B9A\u6301\u6709SSL certificate\u7684key store\u7684\u8DEF\u5F84
#spring.rabbitmq.ssl.key-store-password \u6307\u5B9A\u8BBF\u95EEkey store\u7684\u5BC6\u7801.
#spring.rabbitmq.ssl.trust-store \u6307\u5B9A\u6301\u6709SSL certificates\u7684Trust store.
#spring.rabbitmq.ssl.trust-store-password \u6307\u5B9A\u8BBF\u95EEtrust store\u7684\u5BC6\u7801.


##############################rocketmq###################################

#spring.rocketmq.name-server=192.168.199.238:9876
## \u751F\u4EA7\u8005\u540D\u79F0
#spring.rocketmq.producer.group=lgp-group
## \u751F\u4EA7\u8005\u53D1\u9001\u6D88\u606F\u8D85\u65F6\u65F6\u95F4\u9ED8\u8BA43000\u6BEB\u79D2
#spring.rocketmq.producer.send-msg-timeout=3000
## \u538B\u7F29\u6D88\u606F\u6B63\u6587\u9608\u503C\uFF0C\u5373\u5927\u4E8E4K\u7684\u6D88\u606F\u4F53\u5C06\u5728\u9ED8\u8BA4\u60C5\u51B5\u4E0B\u88AB\u538B\u7F29\u3002
#spring.rocketmq.producer.compress-msg-body-over-howmuch=4096
## \u5B57\u8282\u4E2D\u5141\u8BB8\u7684\u6700\u5927\u6D88\u606F\u5927\u5C0F \u9ED8\u8BA44M
#spring.rocketmq.producer.max-message-size=4194304
## \u6307\u793A\u662F\u5426\u5728\u5185\u90E8\u53D1\u9001\u6545\u969C\u65F6\u91CD\u8BD5\u53E6\u4E00\u4E2A\u4EE3\u7406\u3002\u9ED8\u8BA4false
#spring.rocketmq.producer.retry-another-broker-when-not-store-ok=true
## \u5728\u5F02\u6B65\u6A21\u5F0F\u4E0B\u8BF7\u6C42\u53D1\u9001\u5931\u8D25\u4E4B\u524D\u5728\u5185\u90E8\u6267\u884C\u7684\u6700\u5927\u91CD\u8BD5\u6B21\u6570\u3002*\u8FD9\u53EF\u80FD\u5BFC\u81F4\u6D88\u606F\u590D\u5236\uFF0C\u8FD9\u662F\u7531\u5E94\u7528\u7A0B\u5E8F\u5F00\u53D1\u4EBA\u5458\u6765\u89E3\u51B3\u7684\u3002\u9ED8\u8BA4\u4E3A2
#spring.rocketmq.producer.retry-times-when-send-async-failed= 2
## \u5728\u540C\u6B65\u6A21\u5F0F\u4E2D\u8BF7\u6C42\u53D1\u9001\u5931\u8D25\u4E4B\u524D\u5728\u5185\u90E8\u6267\u884C\u7684\u6700\u5927\u91CD\u8BD5\u6B21\u6570\u3002\u8FD9\u53EF\u80FD\u5BFC\u81F4\u6D88\u606F\u590D\u5236\uFF0C\u8FD9\u662F\u7531\u5E94\u7528\u7A0B\u5E8F\u5F00\u53D1\u4EBA\u5458\u6765\u89E3\u51B3\u7684\u3002 \u9ED8\u8BA4\u4E3A2
#spring.rocketmq.producer.retry-times-when-send-failed= 2
## \u6D88\u8D39\u8005\u6700\u5C0F\u7EBF\u7A0B\u6570 \u9ED8\u8BA420
#spring.rocketmq.consume-thread-min=20
## \u6D88\u8D39\u8005\u6700\u5927\u7EBF\u7A0B\u6570 \u9ED8\u8BA464
#spring.rocketmq.consume-thread-max=64

spring.rocketmq.nameServer=127.0.0.1:29876
spring.rocketmq.producer.group=my-group





